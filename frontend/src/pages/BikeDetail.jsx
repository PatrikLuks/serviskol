import React, { useEffect, useState, useContext } from 'react';
import { useParams, Link } from 'react-router-dom';
import Button from '@mui/material/Button';
import IntakeForm from './IntakeForm';
import ChatBox from '../components/ChatBox';
import { AuthContext } from '../context/AuthContext';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

export default function BikeDetail() {
  const { id } = useParams();
  const { user } = useContext(AuthContext);
  const [bike, setBike] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [showForm, setShowForm] = useState(false);
  const [form, setForm] = useState({ type: '', description: '', status: 'Open' });
  const [formError, setFormError] = useState('');
  const [formLoading, setFormLoading] = useState(false);
  const [showComponentForm, setShowComponentForm] = useState(false);
  const [componentForm, setComponentForm] = useState({ name: '', type: '', condition: '', installedAt: '', expectedLifetimeKm: '' });
  const [componentError, setComponentError] = useState('');
  const [componentLoading, setComponentLoading] = useState(false);
  const [editIndex, setEditIndex] = useState(null);
  const [editComponent, setEditComponent] = useState({ name: '', type: '', condition: '', installedAt: '', expectedLifetimeKm: '' });
  const [editError, setEditError] = useState('');
  const [editLoading, setEditLoading] = useState(false);
  // --- Nové stavy pro editaci servisního záznamu ---
  const [editServiceIndex, setEditServiceIndex] = useState(null);
  const [editService, setEditService] = useState({ type: '', description: '', status: 'Open' });
  const [editServiceError, setEditServiceError] = useState('');
  const [editServiceLoading, setEditServiceLoading] = useState(false);
  // --- Nové stavy pro upload fotky ---
  const [servicePhoto, setServicePhoto] = useState(null);
  const [servicePhotoPreview, setServicePhotoPreview] = useState(null);
  const [servicePhotoError, setServicePhotoError] = useState('');
  const [servicePhotoLoading, setServicePhotoLoading] = useState(false);
  // --- Nové stavy pro workflow technika ---
  const [mechanics, setMechanics] = useState([]);
  const [selectedMechanic, setSelectedMechanic] = useState(null);
  const [mechanicLoading, setMechanicLoading] = useState(false);
  const [mechanicError, setMechanicError] = useState('');
  const [workOrders, setWorkOrders] = useState([]);
  const [workOrderLoading, setWorkOrderLoading] = useState(false);
  const [workOrderError, setWorkOrderError] = useState('');
  const [selectedWorkOrder, setSelectedWorkOrder] = useState(null);
  const [showChat, setShowChat] = useState(false);
  const [chatMessages, setChatMessages] = useState([]);
  const [newMessage, setNewMessage] = useState('');
  const [messageLoading, setMessageLoading] = useState(false);
  const [messageError, setMessageError] = useState('');
  const [serviceHistory, setServiceHistory] = useState([]);
  const [historyLoading, setHistoryLoading] = useState(false);
  const [historyError, setHistoryError] = useState('');
  const [showHistory, setShowHistory] = useState(false);
  const [filter, setFilter] = useState('all');
  const [page, setPage] = useState(1);
  const [limit, setLimit] = useState(10);
  const [totalPages, setTotalPages] = useState(1);
  const [bikeDetails, setBikeDetails] = useState(null);
  const [expanded, setExpanded] = useState(false);
  const [tab, setTab] = useState(0);
  const [search, setSearch] = useState('');
  const [sort, setSort] = useState('asc');
  const [order, setOrder] = useState('name');
  const [columns, setColumns] = useState([
    { id: 'name', label: 'Název', minWidth: 170 },
    { id: 'type', label: 'Typ', minWidth: 100 },
    { id: 'condition', label: 'Stav', minWidth: 100 },
    { id: 'installedAt', label: 'Nainstalováno', minWidth: 100 },
    { id: 'expectedLifetimeKm', label: 'Očekávaná životnost (km)', minWidth: 100 },
  ]);
  const [rows, setRows] = useState([]);
  const [editRow, setEditRow] = useState(null);
  const [open, setOpen] = useState(false);
  const [anchorEl, setAnchorEl] = useState(null);
  const [contextMenu, setContextMenu] = useState(null);
  const [selectedRow, setSelectedRow] = useState(null);
  const [formData, setFormData] = useState({ name: '', type: '', condition: '', installedAt: '', expectedLifetimeKm: '' });
  const [formTitle, setFormTitle] = useState('');
  const [formAction, setFormAction] = useState('');
  const [snackbarOpen, setSnackbarOpen] = useState(false);
  const [snackbarMessage, setSnackbarMessage] = useState('');
  const [snackbarSeverity, setSnackbarSeverity] = useState('success');
  const [dialogOpen, setDialogOpen] = useState(false);
  const [dialogTitle, setDialogTitle] = useState('');
  const [dialogContent, setDialogContent] = useState('');
  const [dialogAction, setDialogAction] = useState(null);
  const [dialogLoading, setDialogLoading] = useState(false);
  const [serviceRecords, setServiceRecords] = useState([]);
  const [serviceRecord, setServiceRecord] = useState(null);
  const [serviceRecordLoading, setServiceRecordLoading] = useState(false);
  const [serviceRecordError, setServiceRecordError] = useState('');
  const [showServiceRecordForm, setShowServiceRecordForm] = useState(false);
  const [serviceRecordForm, setServiceRecordForm] = useState({ type: '', description: '', status: 'Open' });
  const [serviceRecordFormError, setServiceRecordFormError] = useState('');
  const [serviceRecordFormLoading, setServiceRecordFormLoading] = useState(false);
  const [selectedServiceRecord, setSelectedServiceRecord] = useState(null);
  const [editServiceRecord, setEditServiceRecord] = useState(null);
  const [editServiceRecordForm, setEditServiceRecordForm] = useState({ type: '', description: '', status: 'Open' });
  const [editServiceRecordFormError, setEditServiceRecordFormError] = useState('');
  const [editServiceRecordFormLoading, setEditServiceRecordFormLoading] = useState(false);
  const [serviceRecordPhoto, setServiceRecordPhoto] = useState(null);
  const [serviceRecordPhotoPreview, setServiceRecordPhotoPreview] = useState(null);
  const [serviceRecordPhotoError, setServiceRecordPhotoError] = useState('');
  const [serviceRecordPhotoLoading, setServiceRecordPhotoLoading] = useState(false);
  const [notifications, setNotifications] = useState([]);
  const [notificationLoading, setNotificationLoading] = useState(false);
  const [notificationError, setNotificationError] = useState('');
  const [selectedNotification, setSelectedNotification] = useState(null);
  const [showNotificationForm, setShowNotificationForm] = useState(false);
  const [notificationForm, setNotificationForm] = useState({ title: '', message: '', type: 'info' });
  const [notificationFormError, setNotificationFormError] = useState('');
  const [notificationFormLoading, setNotificationFormLoading] = useState(false);
  const [editNotification, setEditNotification] = useState(null);
  const [editNotificationForm, setEditNotificationForm] = useState({ title: '', message: '', type: 'info' });
  const [editNotificationFormError, setEditNotificationFormError] = useState('');
  const [editNotificationFormLoading, setEditNotificationFormLoading] = useState(false);
  const [roles, setRoles] = useState([]);
  const [roleLoading, setRoleLoading] = useState(false);
  const [roleError, setRoleError] = useState('');
  const [selectedRole, setSelectedRole] = useState(null);
  const [showRoleForm, setShowRoleForm] = useState(false);
  const [roleForm, setRoleForm] = useState({ name: '', permissions: [] });
  const [roleFormError, setRoleFormError] = useState('');
  const [roleFormLoading, setRoleFormLoading] = useState(false);
  const [editRole, setEditRole] = useState(null);
  const [editRoleForm, setEditRoleForm] = useState({ name: '', permissions: [] });
  const [editRoleFormError, setEditRoleFormError] = useState('');
  const [editRoleFormLoading, setEditRoleFormLoading] = useState(false);
  const [permissions, setPermissions] = useState([]);
  const [permissionLoading, setPermissionLoading] = useState(false);
  const [permissionError, setPermissionError] = useState('');
  const [selectedPermission, setSelectedPermission] = useState(null);
  const [showPermissionForm, setShowPermissionForm] = useState(false);
  const [permissionForm, setPermissionForm] = useState({ name: '', description: '' });
  const [permissionFormError, setPermissionFormError] = useState('');
  const [permissionFormLoading, setPermissionFormLoading] = useState(false);
  const [editPermission, setEditPermission] = useState(null);
  const [editPermissionForm, setEditPermissionForm] = useState({ name: '', description: '' });
  const [editPermissionFormError, setEditPermissionFormError] = useState('');
  const [editPermissionFormLoading, setEditPermissionFormLoading] = useState(false);
  const [auditLogs, setAuditLogs] = useState([]);
  const [auditLogLoading, setAuditLogLoading] = useState(false);
  const [auditLogError, setAuditLogError] = useState('');
  const [selectedAuditLog, setSelectedAuditLog] = useState(null);
  const [showAuditLogDetails, setShowAuditLogDetails] = useState(false);
  const [auditLogDetails, setAuditLogDetails] = useState(null);
  const [formDialogOpen, setFormDialogOpen] = useState(false);
  const [formDialogTitle, setFormDialogTitle] = useState('');
  const [formDialogContent, setFormDialogContent] = useState('');
  const [formDialogAction, setFormDialogAction] = useState(null);
  const [formDialogLoading, setFormDialogLoading] = useState(false);
  const [serviceReminders, setServiceReminders] = useState([]);
  const [reminderLoading, setReminderLoading] = useState(false);
  const [reminderError, setReminderError] = useState('');
  const [selectedReminder, setSelectedReminder] = useState(null);
  const [showReminderForm, setShowReminderForm] = useState(false);
  const [reminderForm, setReminderForm] = useState({ title: '', description: '', date: '', time: '', repeat: 'none' });
  const [reminderFormError, setReminderFormError] = useState('');
  const [reminderFormLoading, setReminderFormLoading] = useState(false);
  const [editReminder, setEditReminder] = useState(null);
  const [editReminderForm, setEditReminderForm] = useState({ title: '', description: '', date: '', time: '', repeat: 'none' });
  const [editReminderFormError, setEditReminderFormError] = useState('');
  const [editReminderFormLoading, setEditReminderFormLoading] = useState(false);
  const [serviceTemplates, setServiceTemplates] = useState([]);
  const [templateLoading, setTemplateLoading] = useState(false);
  const [templateError, setTemplateError] = useState('');
  const [selectedTemplate, setSelectedTemplate] = useState(null);
  const [showTemplateForm, setShowTemplateForm] = useState(false);
  const [templateForm, setTemplateForm] = useState({ name: '', description: '', services: [] });
  const [templateFormError, setTemplateFormError] = useState('');
  const [templateFormLoading, setTemplateFormLoading] = useState(false);
  const [editTemplate, setEditTemplate] = useState(null);
  const [editTemplateForm, setEditTemplateForm] = useState({ name: '', description: '', services: [] });
  const [editTemplateFormError, setEditTemplateFormError] = useState('');
  const [editTemplateFormLoading, setEditTemplateFormLoading] = useState(false);
  const [serviceReports, setServiceReports] = useState([]);
  const [reportLoading, setReportLoading] = useState(false);
  const [reportError, setReportError] = useState('');
  const [selectedReport, setSelectedReport] = useState(null);
  const [showReportForm, setShowReportForm] = useState(false);
  const [reportForm, setReportForm] = useState({ title: '', description: '', date: '', time: '', services: [] });
  const [reportFormError, setReportFormError] = useState('');
  const [reportFormLoading, setReportFormLoading] = useState(false);
  const [editReport, setEditReport] = useState(null);
  const [editReportForm, setEditReportForm] = useState({ title: '', description: '', date: '', time: '', services: [] });
  const [editReportFormError, setEditReportFormError] = useState('');
  const [editReportFormLoading, setEditReportFormLoading] = useState(false);
  const [serviceInvoices, setServiceInvoices] = useState([]);
  const [invoiceLoading, setInvoiceLoading] = useState(false);
  const [invoiceError, setInvoiceError] = useState('');
  const [selectedInvoice, setSelectedInvoice] = useState(null);
  const [showInvoiceForm, setShowInvoiceForm] = useState(false);
  const [invoiceForm, setInvoiceForm] = useState({ title: '', description: '', date: '', time: '', services: [] });
  const [invoiceFormError, setInvoiceFormError] = useState('');
  const [invoiceFormLoading, setInvoiceFormLoading] = useState(false);
  const [editInvoice, setEditInvoice] = useState(null);
  const [editInvoiceForm, setEditInvoiceForm] = useState({ title: '', description: '', date: '', time: '', services: [] });
  const [editInvoiceFormError, setEditInvoiceFormError] = useState('');
  const [editInvoiceFormLoading, setEditInvoiceFormLoading] = useState(false);
  const [serviceCredits, setServiceCredits] = useState([]);
  const [creditLoading, setCreditLoading] = useState(false);
  const [creditError, setCreditError] = useState('');
  const [selectedCredit, setSelectedCredit] = useState(null);
  const [showCreditForm, setShowCreditForm] = useState(false);
  const [creditForm, setCreditForm] = useState({ title: '', description: '', date: '', time: '', amount: '' });
  const [creditFormError, setCreditFormError] = useState('');
  const [creditFormLoading, setCreditFormLoading] = useState(false);
  const [editCredit, setEditCredit] = useState(null);
  const [editCreditForm, setEditCreditForm] = useState({ title: '', description: '', date: '', time: '', amount: '' });
  const [editCreditFormError, setEditCreditFormError] = useState('');
  const [editCreditFormLoading, setEditCreditFormLoading] = useState(false);
  const [serviceSettings, setServiceSettings] = useState([]);
  const [settingLoading, setSettingLoading] = useState(false);
  const [settingError, setSettingError] = useState('');
  const [selectedSetting, setSelectedSetting] = useState(null);
  const [showSettingForm, setShowSettingForm] = useState(false);
  const [settingForm, setSettingForm] = useState({ key: '', value: '' });
  const [settingFormError, setSettingFormError] = useState('');
  const [settingFormLoading, setSettingFormLoading] = useState(false);
  const [editSetting, setEditSetting] = useState(null);
  const [editSettingForm, setEditSettingForm] = useState({ key: '', value: '' });
  const [editSettingFormError, setEditSettingFormError] = useState('');
  const [editSettingFormLoading, setEditSettingFormLoading] = useState(false);
  const [serviceLogs, setServiceLogs] = useState([]);
  const [logLoading, setLogLoading] = useState(false);
  const [logError, setLogError] = useState('');
  const [selectedLog, setSelectedLog] = useState(null);
  const [showLogDetails, setShowLogDetails] = useState(false);
  const [logDetails, setLogDetails] = useState(null);
  const [logDetailLoading, setLogDetailLoading] = useState(false);
  const [logDetailError, setLogDetailError] = useState('');
  const [showLogDetailDialog, setShowLogDetailDialog] = useState(false);
  const [logDialogData, setLogDialogData] = useState(null);
  const [serviceTasks, setServiceTasks] = useState([]);
  const [taskLoading, setTaskLoading] = useState(false);
  const [taskError, setTaskError] = useState('');
  const [selectedTask, setSelectedTask] = useState(null);
  const [showTaskForm, setShowTaskForm] = useState(false);
  const [taskForm, setTaskForm] = useState({ title: '', description: '', status: 'Open' });
  const [taskFormError, setTaskFormError] = useState('');
  const [taskFormLoading, setTaskFormLoading] = useState(false);
  const [editTask, setEditTask] = useState(null);
  const [editTaskForm, setEditTaskForm] = useState({ title: '', description: '', status: 'Open' });
  const [editTaskFormError, setEditTaskFormError] = useState('');
  const [editTaskFormLoading, setEditTaskFormLoading] = useState(false);
  const [serviceChecklists, setServiceChecklists] = useState([]);
  const [checklistLoading, setChecklistLoading] = useState(false);
  const [checklistError, setChecklistError] = useState('');
  const [selectedChecklist, setSelectedChecklist] = useState(null);
  const [showChecklistForm, setShowChecklistForm] = useState(false);
  const [checklistForm, setChecklistForm] = useState({ title: '', description: '', items: [] });
  const [checklistFormError, setChecklistFormError] = useState('');
  const [checklistFormLoading, setChecklistFormLoading] = useState(false);
  const [editChecklist, setEditChecklist] = useState(null);
  const [editChecklistForm, setEditChecklistForm] = useState({ title: '', description: '', items: [] });
  const [editChecklistFormError, setEditChecklistFormError] = useState('');
  const [editChecklistFormLoading, setEditChecklistFormLoading] = useState(false);
  const [serviceSurveys, setServiceSurveys] = useState([]);
  const [surveyLoading, setSurveyLoading] = useState(false);
  const [surveyError, setSurveyError] = useState('');
  const [selectedSurvey, setSelectedSurvey] = useState(null);
  const [showSurveyForm, setShowSurveyForm] = useState(false);
  const [surveyForm, setSurveyForm] = useState({ title: '', description: '', questions: [] });
  const [surveyFormError, setSurveyFormError] = useState('');
  const [surveyFormLoading, setSurveyFormLoading] = useState(false);
  const [editSurvey, setEditSurvey] = useState(null);
  const [editSurveyForm, setEditSurveyForm] = useState({ title: '', description: '', questions: [] });
  const [editSurveyFormError, setEditSurveyFormError] = useState('');
  const [editSurveyFormLoading, setEditSurveyFormLoading] = useState(false);
  const [serviceNotifications, setServiceNotifications] = useState([]);
  const [notificationSettingLoading, setNotificationSettingLoading] = useState(false);
  const [notificationSettingError, setNotificationSettingError] = useState('');
  const [selectedNotificationSetting, setSelectedNotificationSetting] = useState(null);
  const [showNotificationSettingForm, setShowNotificationSettingForm] = useState(false);
  const [notificationSettingForm, setNotificationSettingForm] = useState({ key: '', value: '' });
  const [notificationSettingFormError, setNotificationSettingFormError] = useState('');
  const [notificationSettingFormLoading, setNotificationSettingFormLoading] = useState(false);
  const [editNotificationSetting, setEditNotificationSetting] = useState(null);
  const [editNotificationSettingForm, setEditNotificationSettingForm] = useState({ key: '', value: '' });
  const [editNotificationSettingFormError, setEditNotificationSettingFormError] = useState('');
  const [editNotificationSettingFormLoading, setEditNotificationSettingFormLoading] = useState(false);
  // ...odstraněny deklarace const [detailsLoading, setDetailsLoading] = useState(false); a const [detailsError, setDetailsError] = useState('');
  // ...ponechány pouze stavy a logika pro správu kol, servisů, komponent, workflow technika a notifikace...
  return (
    <div>
      {/* Zbytek komponenty */}
    </div>
  );
}