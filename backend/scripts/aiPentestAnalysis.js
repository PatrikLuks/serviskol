// AI analýza výsledků penetračních testů (pentestů)
// Vstup: reports/pentest_report.txt
// Výstup: AI sumarizace, doporučení, rizika

const fs = require('fs');
const path = require('path');
const { Configuration, OpenAIApi } = require('openai');

const REPORT_PATH = path.resolve(__dirname, '../reports/pentest_report.txt');
const OUTPUT_PATH = path.resolve(__dirname, '../reports/ai_pentest_analysis.md');
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

if (!OPENAI_API_KEY) {
  console.error('Chybí OPENAI_API_KEY v prostředí.');
  process.exit(1);
}

async function analyzePentest() {
  if (!fs.existsSync(REPORT_PATH)) {
    console.error('Chybí pentest report:', REPORT_PATH);
    process.exit(1);
  }
  const pentestContent = fs.readFileSync(REPORT_PATH, 'utf8');
  const prompt = `Analyzuj následující výstup z penetračního testu (OWASP ZAP, automatizovaný scan) a:
- Detekuj kritická a vysoká rizika
- Navrhni konkrétní opatření
- Vytvoř stručné shrnutí pro management

Výstup pentestu:
${pentestContent}

Odpověz česky, strukturovaně v markdown.`;

  const configuration = new Configuration({ apiKey: OPENAI_API_KEY });
  const openai = new OpenAIApi(configuration);
  const aiResp = await openai.createChatCompletion({
    model: 'gpt-4',
    messages: [{ role: 'user', content: prompt }],
    max_tokens: 900
  });
  const summary = aiResp.data.choices[0].message.content;
  fs.writeFileSync(OUTPUT_PATH, summary);
  console.log('AI analýza pentestu uložena do:', OUTPUT_PATH);
}

if (require.main === module) {
  analyzePentest();
}
